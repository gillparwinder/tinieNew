import * as React from 'react';
import { useContext } from 'react';
import RN, { View } from 'react-native';
import { SafeAreaInsetsContext, SafeAreaProvider } from 'react-native-safe-area-context';
import { Dialog, Toast } from '../index';
import { Color } from '../service';

const Root = _ref => {
  var _RN$useColorScheme;

  let {
    theme,
    colors,
    children,
    dialogConfig,
    toastConfig
  } = _ref;
  const colorScheme = (_RN$useColorScheme = RN.useColorScheme) === null || _RN$useColorScheme === void 0 ? void 0 : _RN$useColorScheme.call(RN);
  const safeAreaInsetsContext = useContext(SafeAreaInsetsContext);
  Color.colorsCustom = colors;
  const isDark = (theme ?? colorScheme) === 'dark';

  if (safeAreaInsetsContext === null) {
    return /*#__PURE__*/React.createElement(SafeAreaProvider, null, /*#__PURE__*/React.createElement(View, {
      style: {
        flex: 1
      }
    }, /*#__PURE__*/React.createElement(Dialog, {
      ref: Dialog.instance,
      isDark: isDark,
      config: dialogConfig
    }), /*#__PURE__*/React.createElement(Toast, {
      ref: Toast.instance,
      isDark: isDark,
      config: toastConfig
    }), children));
  }

  return (
    /*#__PURE__*/
    // eslint-disable-next-line react-native/no-inline-styles
    React.createElement(View, {
      style: {
        flex: 1
      }
    }, /*#__PURE__*/React.createElement(Dialog, {
      ref: Dialog.instance,
      isDark: isDark,
      config: dialogConfig
    }), /*#__PURE__*/React.createElement(Toast, {
      ref: Toast.instance,
      isDark: isDark,
      config: toastConfig
    }), children)
  );
};

export default Root;
//# sourceMappingURL=Root.js.map